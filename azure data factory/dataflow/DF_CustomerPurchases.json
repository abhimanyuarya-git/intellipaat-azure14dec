{
	"name": "DF_CustomerPurchases",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_adls2_innovantracrm_oltp_PurchaseOrder",
						"type": "DatasetReference"
					},
					"name": "PurchaseOrder"
				},
				{
					"dataset": {
						"referenceName": "DS_adls2_innovantracrm_oltp_Customer",
						"type": "DatasetReference"
					},
					"name": "Customer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_adls2_innovantracrm_oltp_output",
						"type": "DatasetReference"
					},
					"name": "Outputstorage"
				}
			],
			"transformations": [
				{
					"name": "PurchaseOrderSelectedColumn"
				},
				{
					"name": "CustomerSelectedColumn"
				},
				{
					"name": "QualityChecks"
				},
				{
					"name": "JoinedStream"
				},
				{
					"name": "CustomerPurchaseAggregated"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PurchaseOrderID as string,",
				"          { CustomerCode} as string,",
				"          ProductCode as string,",
				"          EmployeeCode as string,",
				"          { PuchaseOrderDate} as string,",
				"          { Quantity} as long,",
				"          { UnitPrice} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PurchaseOrder",
				"source(output(",
				"          CustomerCode as string,",
				"          { CustomerName} as string,",
				"          { Address} as string,",
				"          { PhoneNumber} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Customer",
				"PurchaseOrder select(mapColumn(",
				"          { CustomerCode},",
				"          { Quantity}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> PurchaseOrderSelectedColumn",
				"Customer select(mapColumn(",
				"          CustomerCode,",
				"          { CustomerName}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CustomerSelectedColumn",
				"PurchaseOrderSelectedColumn filter(greater({ Quantity},0)) ~> QualityChecks",
				"QualityChecks, CustomerSelectedColumn join({ CustomerCode} == CustomerCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinedStream",
				"JoinedStream aggregate(groupBy({ CustomerCode},",
				"          { CustomerName}),",
				"     { Quantity} = sum({ Quantity})) ~> CustomerPurchaseAggregated",
				"CustomerPurchaseAggregated sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          { CustomerCode} as string,",
				"          { CustomerName} as string,",
				"          { Quantity} as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Outputstorage"
			]
		}
	}
}